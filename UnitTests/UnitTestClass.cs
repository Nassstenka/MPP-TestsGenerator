using NUnit.Framework;
using TestGenerator;

namespace UnitTests
{
    [TestFixture]
    public class Tests
    {
        [Test]
        public void Test1()
        {
            string input = @"
            using System;

            namespace TestProject
            {
                public class TestClass
                {
                    public void justReturn()
                    {
                        return;
                    }
                }
            }
            ";

            string expectedResult = @"using System;
using NUnit.Framework;
using TestProject;

namespace TestProject.Tests
{
    [TestFixture]
    public class TestClassTest
    {
        [Test]
        public void Test1()
        {
            Assert.Fail(" + "\"" + "autogenerated" + "\"" + @");
        }
    }
}";

            TestElement[] elements = TestGenerator.TestGenerator.GenerateTests(input);
            Assert.AreEqual(expectedResult, elements[0].TestCode);
        }
        [Test]
        public void Test2()
        {
            string input = @"
            using System;

            namespace TestProject
            {
                public class TestClass
                {

                }
            }
            ";

            string expectedResult = @"using System;
using NUnit.Framework;
using TestProject;

namespace TestProject.Tests
{
    [TestFixture]
    public class TestClassTest
    {
    }
}";

            TestElement[] elements = TestGenerator.TestGenerator.GenerateTests(input);
            Assert.AreEqual(expectedResult, elements[0].TestCode);
        }
        [Test]
        public void Test3()
        {
            string input = @"
            using System;

            namespace TestProject
            {
                public class TestClass
                {
                    public int i;
                    public string name;

                    public int ReturnInt()
                    {
                        return i;
                    }

                    public void PrintSmth()
                    {
                        Console.WriteLine(" + "\"" + "dgfdgfgdf" + "\"" + @");
                    }

                    private bool BoolBool()
                    {
                        return false;
                    }
                }
            }
            ";

            string expectedResult = @"using System;
using NUnit.Framework;
using TestProject;

namespace TestProject.Tests
{
    [TestFixture]
    public class TestClassTest
    {
        [Test]
        public void Test1()
        {
            Assert.Fail(" + "\"" + "autogenerated" + "\"" + @");
        }

        [Test]
        public void Test2()
        {
            Assert.Fail(" + "\"" + "autogenerated" + "\"" + @");
        }
    }
}";

            TestElement[] elements = TestGenerator.TestGenerator.GenerateTests(input);
            Assert.AreEqual(expectedResult, elements[0].TestCode);
        }
        [Test]
        public void Test4()
        {
            string input = @"
            using System;

            namespace AoAoAo
            {
                public class OaOaOa
                {

                }
            }
            ";
            TestElement[] elements = TestGenerator.TestGenerator.GenerateTests(input);
            Assert.AreEqual("OaOaOaTest", elements[0].TestName);
        }
        [Test]
        public void Test5()
        {
            string input = @"
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Threading.Tasks;

            namespace TestProject
            {
                public class AnotherTestClass
                {
                    public int returnInt()
                    {
                        return 1;
                    }
                    public double returnDouble()
                    {
                        return 2.0;
                    }
                    public string returnString()
                    {
                        return " + "\"" + "asdasdasdasd" + "\"" + @";
                    }
                }
            }
            ";
            TestElement[] elements = TestGenerator.TestGenerator.GenerateTests(input);
            Assert.AreEqual(1, elements.Length);
        }
    }
}

